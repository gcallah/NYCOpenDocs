<p>
This module handles the request URL endpoints for the OpenRecords application.
</p>

<p>
There are routes defined for the following:
</p>

<ul>
<li>
Create a new FOIL request sends a confirmation email after the Requests object
is created.
</li>

<li>
Testing purposes of the view a request back until backend functionality is
implemented.
</li>

<li>
Handle messaging to the requester if they submitted a request to a non-portal
agency.
</li>

<li>
Get selected category value from the request body and generate a list of
sorted agencies from the category.
</li>

<li>
Handle contacting the agency about a request as a requester.
</li>
</ul>

<h3>
Code Issues
</h3>

	<ul class="review">
		<li>
			The request route decorator should be explained so that someone coming to this code
			for the first time knows what it is doing. (One comment for first decorator is enough.)
		</li>

		<li>
			Function <code>new()</code> is very long (over 100 lines). Should be broken up
			into smaller units for readability and unit testing.
		</li>

		<li>
			<code>view_all()</code> has no docstring. Also, why does it need a holiday list?
			Not saying it doesn't, just saying it is not explained.
		</li>

		<li>
			This <code>if</code> is hard to follow because huge:
			<pre>
			<code>
		if current_user in current_request.agency_users \
            or current_request.agency_request_summary \
            and (current_request.requester == current_user
                 and current_request.status == request_status.CLOSED
                 and not current_request.privacy['agency_request_summary']
                 or current_request.status == request_status.CLOSED
                 and current_request.agency_request_summary_release_date
                 and current_request.agency_request_summary_release_date
                 &lt; datetime.utcnow()
                 and not current_request.privacy['agency_request_summary']):
			</code>
			</pre>
			Recommend writing a predicate like <code>show_agency_req()</code>
			and placing all conditions in there.
		</li>

		<li>
			Lines 308-329 should be replaced by an attempt to get the
			value from the dictionary with a default of <code>False</code>.
			(<a href="https://docs.quantifiedcode.com/python-anti-patterns/correctness/not_using_get_to_return_a_default_value_from_a_dictionary.html">See here</a>.) 
		</li>

	</ul>

<h3>
Code Check Report
</h3>

<p>
	This was created by running <code>flake8</code> against the code in this file.
</p>

<pre>
views.py:89:80: E501 line too long (100 &gt;  79 characters)
views.py:114:80: E501 line too long (90 &gt;  79 characters)
views.py:116:80: E501 line too long (93 &gt;  79 characters)
views.py:117:80: E501 line too long (120 &gt;  79 characters)
views.py:132:80: E501 line too long (81 &gt;  79 characters)
views.py:133:80: E501 line too long (82 &gt;  79 characters)
views.py:135:80: E501 line too long (91 &gt;  79 characters)
views.py:140:80: E501 line too long (81 &gt;  79 characters)
views.py:156:80: E501 line too long (81 &gt;  79 characters)
views.py:167:80: E501 line too long (103 &gt;  79 characters)
views.py:171:80: E501 line too long (89 &gt;  79 characters)
views.py:174:80: E501 line too long (93 &gt;  79 characters)
views.py:179:80: E501 line too long (92 &gt;  79 characters)
views.py:180:80: E501 line too long (81 &gt;  79 characters)
views.py:182:80: E501 line too long (106 &gt;  79 characters)
views.py:205:80: E501 line too long (112 &gt;  79 characters)
views.py:230:16: E713 test for membership should be 'not in'
views.py:230:80: E501 line too long (106 &gt;  79 characters)
views.py:231:80: E501 line too long (84 &gt;  79 characters)
views.py:254:80: E501 line too long (82 &gt;  79 characters)
views.py:263:80: E501 line too long (96 &gt;  79 characters)
views.py:269:80: E501 line too long (84 &gt;  79 characters)
views.py:273:80: E501 line too long (116 &gt;  79 characters)
views.py:279:80: E501 line too long (90 &gt;  79 characters)
views.py:309:80: E501 line too long (104 &gt;  79 characters)
views.py:314:80: E501 line too long (83 &gt;  79 characters)
views.py:315:80: E501 line too long (112 &gt;  79 characters)
views.py:320:80: E501 line too long (93 &gt;  79 characters)
views.py:321:80: E501 line too long (111 &gt;  79 characters)
views.py:325:80: E501 line too long (85 &gt;  79 characters)
views.py:326:80: E501 line too long (105 &gt;  79 characters)
views.py:327:80: E501 line too long (135 &gt;  79 characters)
views.py:344:80: E501 line too long (105 &gt;  79 characters)
views.py:345:80: E501 line too long (89 &gt;  79 characters)
views.py:346:80: E501 line too long (91 &gt;  79 characters)
views.py:347:80: E501 line too long (95 &gt;  79 characters)
views.py:348:80: E501 line too long (107 &gt;  79 characters)
views.py:349:80: E501 line too long (93 &gt;  79 characters)
views.py:361:37: E251 unexpected spaces around keyword / parameter equals
views.py:361:39: E251 unexpected spaces around keyword / parameter equals
views.py:370:80: E501 line too long (104 &gt;  79 characters)
views.py:374:80: E501 line too long (87 &gt;  79 characters)
views.py:380:80: E501 line too long (111 &gt;  79 characters)
views.py:395:80: E501 line too long (90 &gt;  79 characters)
views.py:397:80: E501 line too long (108 &gt;  79 characters)
views.py:404:80: W291 trailing whitespace
views.py:405:13: W291 trailing whitespace
views.py:419:80: E501 line too long (95 &gt;  79 characters)
</pre&gt; 

