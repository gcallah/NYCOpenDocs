The files contains the class LatexCompiler, which is used to create PDF from a LaTeX layout.
The _create_file of the class creates the .tex file in the output directory and writes the data inside the inputted document into the .tex file.

<br>This file also contains functions that generates a flask response with a pdf file attached, a LaTeX template for an envelope, and a PDF envelope.
In addition, the escape_latex_characters function replaces characters with the LaTeX version.
<br><br>
The function 'compile(self, document)' compiles a LaTeX document to PDF.
<br><br>
Function 'generate_pdf(pdf_data)' generates a PDF from a string of data by returning a PDF File object.
<br><br>
Function 'generate_pdf_flask_response(pdf_data)' returns a Flask response object with a PDF as an attachment.
<br><br>
Function 'generate_envelope(template_name, data)' returns the LaTeX for an envelope with the provided data pre-filled.
<br><br>
Function 'generate_envelope_pdf(document)' returns a PDF envelope.
<br><br>
Function 'escape_latex_characters(line)' replaces a string with the escaped LaTeX version of reserved characters.

<h3>
Code Issues
</h3>

<ul class="review">
  <li>
  Line 91 uses partially qualified path with Jinja2.
  Jinja2 is a Python HTML templating system. It is typically used to build
  web applications, though appears in other places well, notably the
  Ansible automation system. When configuring the Jinja2 environment,
  the option to use autoescaping on input can be specified.
  When autoescaping is enabled, Jinja2 will filter input strings to escape
  any HTML content submitted via template variables. Without escaping HTML
  input the application becomes vulnerable to Cross Site Scripting (XSS)
  attacks.
  Unfortunately, autoescaping is False by default.
  Thus this plugin test will warn on omission of an autoescape setting,
  as well as an explicit setting of false.
  </li>

</ul>
